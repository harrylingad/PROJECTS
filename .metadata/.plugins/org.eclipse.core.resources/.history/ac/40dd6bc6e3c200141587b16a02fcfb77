package com.kilobolt.zbhelpers;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.Texture.TextureFilter;
import com.badlogic.gdx.graphics.g2d.Animation;
import com.badlogic.gdx.graphics.g2d.TextureRegion;

public class AssetLoader {
	 public static Texture texture;
	    public static TextureRegion bg, grass;

	    public static Animation birdAnimation;
	    public static TextureRegion bird, birdDown, birdUp;

	    public static TextureRegion skullUp, skullDown, bar;

	    public static void load() {

	        texture = new Texture(Gdx.files.internal("data/texture.png"));
	        texture.setFilter(TextureFilter.Nearest, TextureFilter.Nearest);

	        bg = new TextureRegion(texture, 0, 0, 136, 43);
	        bg.flip(false, true);

	        grass = new TextureRegion(texture, 0, 43, 143, 11);
	        grass.flip(false, true);

	        birdDown = new TextureRegion(texture, 136, 0, 17, 12);
	        birdDown.flip(false, true);

	        bird = new TextureRegion(texture, 153, 0, 17, 12);
	        bird.flip(false, true);

	        birdUp = new TextureRegion(texture, 170, 0, 17, 12);
	        birdUp.flip(false, true);

	        TextureRegion[] birds = { birdDown, bird, birdUp };
	        birdAnimation = new Animation(0.06f, birds);
	        birdAnimation.setPlayMode(Animation.PlayMode.LOOP_PINGPONG);

	        skullUp = new TextureRegion(texture, 192, 0, 24, 14);
	        // Create by flipping existing skullUp
	        skullDown = new TextureRegion(skullUp);
	        skullDown.flip(false, true);

	        bar = new TextureRegion(texture, 136, 16, 22, 3);
	        bar.flip(false, true);

	    }

	    public static void dispose() {
	        // We must dispose of the texture when we are finished.
	        texture.dispose();
	    }

		public static Texture getTexture() {
			return texture;
		}

		public static void setTexture(Texture texture) {
			AssetLoader.texture = texture;
		}

		public static TextureRegion getBg() {
			return bg;
		}

		public static void setBg(TextureRegion bg) {
			AssetLoader.bg = bg;
		}

		public static TextureRegion getGrass() {
			return grass;
		}

		public static void setGrass(TextureRegion grass) {
			AssetLoader.grass = grass;
		}

		public static Animation getBirdAnimation() {
			return birdAnimation;
		}

		public static void setBirdAnimation(Animation birdAnimation) {
			AssetLoader.birdAnimation = birdAnimation;
		}

		public static TextureRegion getBird() {
			return bird;
		}

		public static void setBird(TextureRegion bird) {
			AssetLoader.bird = bird;
		}

		public static TextureRegion getBirdDown() {
			return birdDown;
		}

		public static void setBirdDown(TextureRegion birdDown) {
			AssetLoader.birdDown = birdDown;
		}

		public static TextureRegion getBirdUp() {
			return birdUp;
		}

		public static void setBirdUp(TextureRegion birdUp) {
			AssetLoader.birdUp = birdUp;
		}

		public static TextureRegion getSkullUp() {
			return skullUp;
		}

		public static void setSkullUp(TextureRegion skullUp) {
			AssetLoader.skullUp = skullUp;
		}

		public static TextureRegion getSkullDown() {
			return skullDown;
		}

		public static void setSkullDown(TextureRegion skullDown) {
			AssetLoader.skullDown = skullDown;
		}

		public static TextureRegion getBar() {
			return bar;
		}

		public static void setBar(TextureRegion bar) {
			AssetLoader.bar = bar;
		}
	    
	    
	    
	    
}
